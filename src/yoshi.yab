#!yab

doc Yoshi
doc yab over shell for input
doc
doc copyright Jim Saxton Fat Elk Software, 2016, BSD ( 2 dalause)
import popup



args= peek("argument")
if args = 0 command$="Default":goto openfile
if args > 10 usage ()
command$=peek$("argument")
label openfile
if (not open(1,command$)) then
	if (not open(1,"/boot/home/config/settings/fatelk/yoshi/commands/"+command$)) then
		usage ()
	endif	
end if

dim widget$(150,3)
dim active_widget$(1,20)	
defaults()
origxorigx=0 // origon for next widget
origy=0 // origon for next widget
x=0
while(not eof(1)) 
	line input #1 a$
	if len(a$)>0 then
	if (not left$(a$,1) = "#") then
	if parseline$(a$)="ok" then
	widget$(x,1)=label$
	widget$(x,2)=command$
	widget$(x,3)=parameter$
	x=x+1
	endif
	endif
	endif
	 
	
wend 

for x=0 to 150
if widget$(x,1) <> "" then
//print widget$(x,1)+" "+widget$(x,2)+" "+widget$(x,3)
if lower$(widget$(x,2)) = "type" widget_type(x)
endif
next
openwindow(0)

inloop=1
while(inloop)
	msg$=message$
	//if msg$<>"" print msg$
	
	
	switch msg$
		
		case WindowID$+":_QuitRequested|"
		case "cancel|"
		print "cancel=1"
		inloop=0
        	
        	break
        	
        case "default|"
			completed=handleoutput("done")
            if (completed) then
				print "cancel=0"
        		print "default=1"
        		if addbutton <> 0 print active_widget$(addbutton,1)+"=0"
        		inloop=0
        	endif
        break
        
        case "button|"
			completed=handleoutput("button")
            if (completed) then
				print "cancel=0"
        		print "default=0"
        		print active_widget$(addbutton,2)+"=1"
        		inloop=0
        	endif
        break
        
      default
      if instr(msg$,"ON|") ceckboxonoff(msg$)
      if instr(msg$,"OFF|") ceckboxonoff(msg$)
      if instr(msg$,".option") radio_button(msg$)
      if instr(msg$,"popup") popup_handle(msg$)
      if instr(msg$,"multi") multi_handle(msg$)      
      if ! instr(msg$,"MainWindow") and instr(msg$,":_") filepanel_handle(msg$)
      	
	end switch
wend
exit
////////////////////////////////////////////////////////
sub handleoutput(status$)
size=arraysize( active_widget$(),1)
for x=1 to size
if active_widget$(x,20) = "true" and status$ = "done" then 
if (active_widget$(x,1)="TEXTCONTROL") and (TEXTCONTROL GET$ active_widget$(x,2) = "") return 0

// the widget is manditory, need to check if it has data.
end if
next


for x=1 to size

	if active_widget$(x,1)="TEXTCONTROL" then
		output$ = active_widget$(x,2)+"="+TEXTCONTROL GET$ active_widget$(x,2)
		//output$=output$
		print output$		
	endif
	if active_widget$(x,1)="checkbox" then
		output$=active_widget$(x,2)+"="+active_widget$(x,5)
		print output$
	endif
	if active_widget$(x,1)="radiobutton" then
		output$=active_widget$(x,2)+"="+active_widget$(x,5)
		print output$
	endif
	if active_widget$(x,1)="date" then
		output$=active_widget$(x,2)+"="+calendar get$ active_widget$(x,2)
		print output$
	endif
	if active_widget$(x,1)="filepanel" then
		output$=active_widget$(x,2)+"="+active_widget$(x,4)
		print output$
	endif
	if active_widget$(x,1)="popup" then
		output$=active_widget$(x,2)+"="+getselected$(val(active_widget$(x,5)))
		print output$
	endif	
	if active_widget$(x,1)="multi" then
		//output$=active_widget$(x,2)+"="+getselected$(val(active_widget$(x,5)))
		a$=getselected$(val(active_widget$(x,5)))
		output$=active_widget$(x,2)+"="+a$
		print output$
	endif
	if active_widget$(x,1)="spincontrol" then
		output$=active_widget$(x,2)+"="+str$(SPINCONTROL GET active_widget$(x,2))
		print output$
	endif		
next

return 1
end sub

////////////////////////////////////////////////////////
sub usage()
print "yoshi 1.0"
print "usage:"
print "yoshi commandfile"
print
print " The commandfile must have all the window elements,"
print "please see the documentation for details."
exit
end sub
////////////////////////////////////////////////////////
sub parseline$(line$)
//print line$
local x,y

x=instr(line$,"=")
if x=0 return "error"
lc$=left$(line$,x-2) // label and command
y=instr(lc$,".")
if y<1 return "error"
label$=left$(lc$,y-1)
command$=right$(lc$,len(lc$)-y)
parameter$ = right$(line$,len(line$)-(x+1))
parameter$=trim$(parameter$)
return "ok"

end sub
////////////////////////////////////////////////////////
sub Blank$(num) 
local s$
local x
s$=""
for x=1 to num
	s$=s$+"â–ˆ"
next
return s$ 
end sub
////////////////////////////////////////////////////////
sub windowlook$(winlook$)
switch lower$(winlook$)
	case "floating"
		return "Floating"
		break
	case "modal"
		cancel=1
		return "Modal"
		break
	case "bordered"
		cancel=1
		return "Bordered"
		break
	case "no-border"
		cancel=1
		return "No-Border"
		break
	default
		return "Titled"
		break
end switch
end sub
////////////////////////////////////////////////////////
sub defaults()
height=peek("desktopheight")
width=peek("desktopwidth")
width=width/2
wx=width-140
wx1=width+140
height=height/4
wy=height-40
wy1=height
ID$="MainView"
ID1$="MainView1"
WindowID$="MainWindow"
Title$="Yoshi"
curentheight = 10
curentwidth=280
curentheight1=0
curentwidth1=0
ox=wx
oy=wy
defaultbutton = 0
panel = 1
end sub

////////////////////////////////////////////////////////
sub openwindow(p)
if args > 1 command_line_args()
local x
x=p
red=216
blue=216
green=216
dim bgcolor$(3)
label getcommand
if widget$(x,1) = "*" then

	command$=upper$(widget$(x,2))
	parameter$ = widget$(x,3)
		switch command$
		case "TITLE"
			Title$ = parameter$
		break
		case "LOOK"
			look$ = parameter$
		break
		case "X" 
			ox=val(parameter$)
		break
		case "Y"
			oy=val(parameter$)
		break
		case "BGCOLOR"
		num=split(parameter$,bgcolor$(), ",")
		break
		default
		end switch				
x=x+1

endif


if widget$(x,1) = "*"goto getcommand

if curentwidth+curentwidth1>280 wx1=wx+curentwidth+curentwidth1

if curentheight1 > curentheight curentheight=curentheight1
WINDOW OPEN wx,wy TO wx1,wy+curentheight+30, WindowID$, Title$
WINDOW SET WindowID$, "flags", "Not-Resizable Not-Zoomable"
if bgcolor$(1)<>""then
red=val(bgcolor$(1))
green=val(bgcolor$(2))
blue=val(bgcolor$(3))
end if

DRAW SET "bgcolor", red,green,blue, WindowID$
if look$<>"" then
llook$=windowlook$(look$)
//print llook$
WINDOW SET WindowID$, "look",llook$
endif

if panel=2 then
	VIEW 0,0 TO curentwidth1,curentheight, ID$, WindowID$
	DRAW SET "bgcolor", red,green,blue, ID$
	if panel1$="||" then 
	DRAW LINE curentwidth1-1,20 TO curentwidth1,curentheight, ID$
	endif

	
	VIEW curentwidth1,0 TO curentwidth+curentwidth1,curentheight, ID1$, WindowID$
	DRAW SET "bgcolor", red,green,blue, ID1$
else	
	
	VIEW 0,0 TO curentwidth,curentheight, ID$, WindowID$
	DRAW SET "bgcolor", red,green,blue, ID$
endif


 
WINDOW SET WindowID$, "MoveTo", ox,oy
if defaultbutton = 0 then
beginbutton=curentwidth+curentwidth1-45
BUTTON beginbutton,curentheight+5 TO curentwidth+curentwidth1-5,curentheight+25, "default", "OK", WindowID$
else
x = DRAW GET "Text-Width", active_widget$(defaultbutton,3), WindowID$
beginbutton=curentwidth+curentwidth1-(x+20)
BUTTON beginbutton,curentheight+5 TO curentwidth+curentwidth1-5,curentheight+25, "default", active_widget$(defaultbutton,3), WindowID$
if active_widget$(defaultbutton,6) <> "" tooltip "default", active_widget$(defaultbutton,6) 
endif

 

if cancel=1 then
	if cancelbutton = 0 then
		BUTTON beginbutton-70,curentheight+5 TO beginbutton-5,curentheight+25, "cancel", "CANCEL", WindowID$
		beginbutton = beginbutton-(-70)
	else
		x = DRAW GET "Text-Width", active_widget$(cancelbutton,3), WindowID$
		BUTTON beginbutton-(x+20),curentheight+5 TO beginbutton-5,curentheight+25, "cancel", active_widget$(cancelbutton,3), WindowID$
		if active_widget$(cancelbutton,6) <> "" tooltip "cancel", active_widget$(cancelbutton,6)
		beginbutton = beginbutton-(x+20)
	endif
endif

if addbutton <> 0 then
	x = DRAW GET "Text-Width", active_widget$(addbutton,3), WindowID$
	BUTTON beginbutton-(x+20),curentheight+5 TO beginbutton-5,curentheight+25, "button", active_widget$(addbutton,3), WindowID$
	if active_widget$(addbutton,6) <> "" tooltip "button", active_widget$(addbutton,6)
end if	

	





draw set "system-fixed",WindowID$
size=arraysize( active_widget$(),1)
for x=1 to size
addwidget(x)

next





end sub
////////////////////////////////////////////////////////
sub widget_type(n)

switch lower$(widget$(n,3))
	case "textfield"
		textfield(n)
		break
	case "image"
		imagefile(n)
		break
	case "checkbox"
		checkboxsetup(n)
		break
	case "text"
		textsetup(n)
	break
	case "radiobutton"
	radiobutton_setup(n)
	break
	case "defaultbutton"
		defaultbutton(n)
	break
	case "cancelbutton"
		cancelbutton(n)
	break
	case "button"
		add_button (n)
	break
	case "date"
		setup_calendar(n)
	break
	case "filepanel"
		setup_filepanel(n)
	break
	case "popup"
		setup_popup(n)
	break
	case "multiselect"
		setup_multi(n)
	break
	case "texturl"
		setup_texturl(n)
	break
	case "spincontrol"
		setup_spincontrol(n)
	break	
	
	case "|"
	case "||"
		setup_multiview(n)
	break
					
	default
	end switch	


end sub

////////////////////////////////////////////////////////
sub textfield(x)
arayscript=x

size=arraysize( active_widget$(),1)
size=size+1
label$=""
dim active_widget$(size,8)
fontheight=peek("tabheight")
curentheight=curentheight+30
active_widget$(size,1)="TEXTCONTROL"
active_widget$(size,2)=widget$(arayscript,1) // name of textcontrol
arayscript=arayscript+1
label texttest
if widget$(arayscript,1)=active_widget$(size,2) then
//print "lower$(widget$(arayscript,2)) ",lower$(widget$(arayscript,2))
	switch lower$(widget$(arayscript,2))
		case "label"
			//print "label ", widget$(arayscript,3)
			label$ = widget$(arayscript,3)
			curentheight = curentheight+fontheight
		break
		case "default"
			defaulttext$ = widget$(arayscript,3)
			break
		case "width"	
			textlength$=widget$(arayscript,3)
		break
		case "tooltip"
			tooltip$=widget$(arayscript,3)
		break
		case "single"
		single$=lower$(widget$(arayscript,3))
		break
		case "mandatory"
		mandatory$=lower$(widget$(arayscript,3))
		break
		case "align"
		align$=lower$(widget$(arayscript,3))
		case "ispassword"
			ispassword$=lower$(widget$(arayscript,3))	
		default
		
	end switch
end if
arayscript=arayscript+1
if widget$(arayscript,1)=active_widget$(size,2) goto texttest
//TEXT x1,y1 TO x2,y2, ID$, Text$, View$
//TEXTCONTROL x1,y1 TO x2,y2, ID$, Label$, Text$, View$

active_widget$(size,3)=label$
//print "active_widget$(size,3) "+active_widget$(size,3), size
active_widget$(size,4)=defaulttext$
active_widget$(size,5)=textlength$
active_widget$(size,6)=tooltip$
active_widget$(size,7)=single$
active_widget$(size,18)=ispassword$
active_widget$(size,19)=align$
active_widget$(size,20)=mandatory$
if single$="true" then
	window open -300 ,-300 to -100, -100, "bmp", ""
	space$=Blank$(val(textlength$))
	TC_Width=draw get "Text-Width", space$,"bmp"
	labelength=draw get "Text-Width", label$, "bmp"
	labelength=labelength+TC_Width
	if (labelength > curentwidth-10) curentwidth=labelength+10
	Window close "bmp"
	if active_widget$(size,3)<>"" curentheight = curentheight-fontheight
endif





//print "curentheight ", curentheight

label$=""
defaulttext$=""
textlength$=""
tooltip$=""
single$=""			
mandatory$="" 
align$=""
ispassword$=""
end sub

////////////////////////////////////////////////////////
sub imagefile(n)

arayscript=n
size=arraysize( active_widget$(),1)
size=size+1
label$=""
dim active_widget$(size,20)
//print widget$(n,3)
active_widget$(size,1)="image"
active_widget$(size,2)=widget$(arayscript,1) // name of image
arayscript=arayscript+1

label imagetest
if widget$(arayscript,1)=active_widget$(size,2) then
//print "lower$(widget$(arayscript,2)) ",lower$(widget$(arayscript,2))
	switch lower$(widget$(arayscript,2))
		case "label"
			//print "label ", widget$(arayscript,3)
			label$ = widget$(arayscript,3)
			//curentheight = curentheight+25
			window open -300 ,-300 to -100, -100, "bmp", ""
			labelength=draw get "Text-Width", label$, "bmp"
			if (labelength > curentwidth-20) curentwidth=labelength+20
			Window close "bmp"
			break
		case "path"
			imagepath$ = widget$(arayscript,3)
			break
		case "maxwidth"	
			imagewidth$=widget$(arayscript,3)
		break
		case "maxheight"	
			imageheight$=widget$(arayscript,3)
		break
		case "border"
			imageborder$=widget$(arayscript,3)
		default
	end switch
end if
arayscript=arayscript+1
if widget$(arayscript,1)=active_widget$(size,2) goto imagetest
active_widget$(size,3)=label$
active_widget$(size,4)=imagepath$
if val(imagewidth$) > curentwidth-10 curentwidth=val(imagewidth$)+10
if val(imagewidth$) = 0 imageborder$=""
active_widget$(size,5)=imagewidth$
active_widget$(size,7)=imageborder$

if imageheight$="" then
//print lower$(widget$(arayscript,2)) +" "+active_widget$(size,2)
	imageheight$=attribute get$ "Media:Height", imagepath$
	imageheight$=str$(asc(imageheight$))
endif
if val(imageheight$)=0 imageheight$="64"
active_widget$(size,6)=imageheight$
curentheight = curentheight+val(imageheight$)+10 

label$=""
imagepath$=""
imagewidth$=""
imageborder$=""
imageheight$=""
end sub
////////////////////////////////////////////////////////
sub checkboxsetup(n)
local x
x=n
size=arraysize( active_widget$(),1)
size=size+1
label$=""
dim active_widget$(size,20)
active_widget$(size,1)="checkbox"
active_widget$(size,2)=widget$(x,1) // name of checkbox
curentheight = curentheight+25

label checkboxtest
if widget$(x,1)=active_widget$(size,2) then
//print "lower$(widget$(x,2)) ",lower$(widget$(x,2))
	switch lower$(widget$(x,2))
		case "label"
			//print "label ", widget$(x,3)
			label$ = widget$(x,3)
			//curentheight = curentheight+25
			break
		case "default"
			default$ = widget$(x,3)
			break
		case "tooltip"	
			tooltip$=widget$(x,3)
		break
		
		default
	end switch
end if

x=x+1
if widget$(x,1)=active_widget$(size,2) goto checkboxtest
window open -300 ,-300 to -100, -100, "bmp", ""
	labelength=draw get "Text-Width", label$, "bmp"
	if (labelength > curentwidth-40) curentwidth=labelength+40
Window close "bmp"
active_widget$(size,3)=label$
active_widget$(size,4)=default$
active_widget$(size,6)=tooltip$

label$=""
default$=""
tooltip$ = ""	
	

end sub
////////////////////////////////////////////////////////

sub textsetup(n)
scrollbar$=""

local x, lines
lines=3

x=n
size=arraysize( active_widget$(),1)
size=size+1
dim active_widget$(size,20)
active_widget$(size,1)="text"
active_widget$(size,2)=widget$(x,1) // name of text
label texttest
if widget$(x,1)=active_widget$(size,2) then
//print "lower$(widget$(x,2)) ",lower$(widget$(x,2))
	switch lower$(widget$(x,2))
		
			
			
		case "default"
			default$ = widget$(x,3)
			break
		case "tooltip"	
			tooltip$=widget$(x,3)
		break
		case "lines"
			lines$=widget$(x,3)			
			window open -300 ,-300 to -100, -100, "bmp", ""
			labelength=draw get "Text-Width", default$, "bmp"
			labelheight=draw get "Max-Text-Height", "bmp"
			Window close "bmp"
			if lines$= "1" then
				curentheight=curentheight+labelheight+2
				if (labelength > curentwidth-20) curentwidth=labelength+20
			endif
			break
		case "align"
			align$=widget$(x,3)
			break
		case "scrollbar"
			scrollbar$=widget$(x,3)
			
			break
		case "bg"
			bg$=widget$(x,3)
			break
				
		default
	end switch
end if

x=x+1
if widget$(x,1)=active_widget$(size,2) goto texttest

if default$="" return


label checkdefault

i=instr(default$,"[return]")
if i > 0 then
lt$=left$(default$,i-1)
rt$=right$(default$,len(default$)-(i+7))
default$=lt$+"\n"+rt$
goto checkdefault
endif


if lines$= "" lines$="1" 

active_widget$(size,3)=lines$
active_widget$(size,4)=default$
active_widget$(size,6)=tooltip$
active_widget$(size,19)=align$
if lines$= "1" scrollbar$="0"
active_widget$(size,18)=scrollbar$
active_widget$(size,17)=bg$



lines=val(lines$)
curentheight = curentheight+((labelheight+2)*lines)

lines$=""
default$=""
tooltip$=""
align$=""
scrollbar$=""
bg$=""
end sub
////////////////////////////////////////////////////////
sub radiobutton_setup(n)

local x, lines
lines=3
x=n
size=arraysize( active_widget$(),1)
size=size+1
dim active_widget$(size,20)
active_widget$(size,1)="radiobutton"
active_widget$(size,2)=widget$(x,1) // name of radiobutton

curentheight2=curentheight
label$=""
label radiobutton_test

if widget$(x,1)=active_widget$(size,2) then
//print "lower$(widget$(x,2)) ",lower$(widget$(x,2))
	switch lower$(widget$(x,2))
		
			
			
		case "default"
			default$ = widget$(x,3)
			break
		case "tooltip"	
			tooltip$=widget$(x,3)
			break
		case "label"
			label$=widget$(x,3)
			//print "label ", widget$(arayscript,3)
			curentheight = curentheight+25
			window open -300 ,-300 to -100, -100, "bmp", ""
			labelength=draw get "Text-Width", label$, "bmp"
			if (labelength > curentwidth-20) curentwidth=labelength+20
			Window close "bmp"
			break
		case "option1"
			option1$=widget$(x,3)
			curentheight = curentheight+25
			break
		case "option2"
			option2$=widget$(x,3)
			curentheight = curentheight+25
			break
		case "option3"
			option3$=widget$(x,3)
			curentheight = curentheight+25
			break
		case "option4"
			option4$=widget$(x,3)
			curentheight = curentheight+25
			break
		case "option5"
			option5$=widget$(x,3)
			curentheight = curentheight+25
			break
		case "option6"
			option6$=widget$(x,3)
			curentheight = curentheight+25
			break
				
		default
	end switch
end if

x=x+1
if widget$(x,1)=active_widget$(size,2) goto radiobutton_test
if option1$="" curentheight=curentheight2: return


active_widget$(size,3)=label$
active_widget$(size,4)=default$
active_widget$(size,6)=tooltip$
active_widget$(size,11)=option1$
active_widget$(size,12)=option2$
active_widget$(size,13)=option3$
active_widget$(size,14)=option4$
active_widget$(size,15)=option5$
active_widget$(size,16)=option6$


label$=""
default$=""
tooltip$=""
option1$=""
option2$=""
option3$=""
option4$=""
option5$=""
option6$=""

end sub

////////////////////////////////////////////////////////

sub defaultbutton(v)
local x
x=v
size=arraysize( active_widget$(),1)
size=size+1
dim active_widget$(size,20)
active_widget$(size,1)="defaultbutton"
active_widget$(size,2)=widget$(x,1) // name of defaultbutton
label defaultbutton_test
if widget$(x,1)=active_widget$(size,2) then
//print "lower$(widget$(x,2)) ",lower$(widget$(x,2))
	switch lower$(widget$(x,2))
		case "tooltip"	
			tooltip$=widget$(x,3)
			break
		case "label"
			label$=widget$(x,3)
			break
	end switch	
end if
x=x+1
if widget$(x,1)=active_widget$(size,2) goto defaultbutton_test

active_widget$(size,3)=label$
active_widget$(size,6)=tooltip$

defaultbutton = size

label$=""
tooltip$=""


end sub

////////////////////////////////////////////////////////

sub cancelbutton(v)
local x
x=v
size=arraysize( active_widget$(),1)
size=size+1
dim active_widget$(size,20)
active_widget$(size,1)="cancelbutton"
active_widget$(size,2)=widget$(x,1) // name of cancelbutton
label cancelbutton_test
if widget$(x,1)=active_widget$(size,2) then
//print "lower$(widget$(x,2)) ",lower$(widget$(x,2))
	switch lower$(widget$(x,2))
		case "tooltip"	
			tooltip$=widget$(x,3)
			break
		case "label"
			label$=widget$(x,3)
		break
	end switch	
end if
x=x+1
if widget$(x,1)=active_widget$(size,2) goto cancelbutton_test

active_widget$(size,3)=label$
active_widget$(size,6)=tooltip$

cancelbutton = size
cancel=1

label$=""
tooltip$=""


end sub

////////////////////////////////////////////////////////
sub add_button (v)

local x
x=v
size=arraysize( active_widget$(),1)
size=size+1
dim active_widget$(size,20)
active_widget$(size,1)="button"
active_widget$(size,2)=widget$(x,1) // name of button
label button_test
if widget$(x,1)=active_widget$(size,2) then
//print "lower$(widget$(x,2)) ",lower$(widget$(x,2))
	switch lower$(widget$(x,2))
		case "tooltip"	
			tooltip$=widget$(x,3)
			break
		case "label"
			label$=widget$(x,3)
		break
	end switch	
end if
x=x+1
if widget$(x,1)=active_widget$(size,2) goto button_test

active_widget$(size,3)=label$
active_widget$(size,6)=tooltip$

addbutton = size


label$=""
tooltip$=""


end sub
////////////////////////////////////////////////////////


sub setup_calendar(v)

label$=""

local x
x=v
size=arraysize( active_widget$(),1)
size=size+1
dim active_widget$(size,20)
active_widget$(size,1)="date"
active_widget$(size,2)=widget$(x,1) // name of date


label date_test

if widget$(x,1)=active_widget$(size,2) then
//print "lower$(widget$(x,2)) ",lower$(widget$(x,2))
	switch lower$(widget$(x,2))
		case "tooltip"	
			tooltip$=widget$(x,3)
			break
		case "label"
			label$=widget$(x,3)
			break
		case "default"
			default$=widget$(x,3)
			BREAK
			case "format"
			format$=widget$(x,3)
			BREAK
	end switch	
end if
x=x+1
if widget$(x,1)=active_widget$(size,2) goto date_test


window open -300 ,-300 to -100, -100, "bmp", ""
labelength=draw get "Text-Width", default$, "bmp"
labelheight=draw get "Max-Text-Height", "bmp"
Window close "bmp"
if label$="" then
curentheight=curentheight+labelheight+5
else 
curentheight=curentheight+ 2*(labelheight+5)
endif
if (labelength > curentwidth-20) curentwidth=labelength+20

active_widget$(size,3)=label$
active_widget$(size,6)=tooltip$
active_widget$(size,7)=format$
active_widget$(size,4)=default$


//print tooltip$
//print default$

label$=""
tooltip$=""
default$=""
format$=""

end sub
////////////////////////////////////////////////////////
sub setup_filepanel(v)


label$=""

local x
x=v
size=arraysize( active_widget$(),1)
size=size+1
dim active_widget$(size,20)
active_widget$(size,1)="filepanel"
active_widget$(size,2)=widget$(x,1) // name of filepanel


label filepanel_test

if widget$(x,1)=active_widget$(size,2) then
//print "lower$(widget$(x,2)) ",lower$(widget$(x,2))
	switch lower$(widget$(x,2))
		case "mode"	
			mode$=widget$(x,3)
			break
		case "label"
			label$=widget$(x,3)
			break
		case "default"
			default$=widget$(x,3)
			BREAK
			case "width"
			width$=widget$(x,3)
			BREAK
	end switch	
end if
x=x+1
if widget$(x,1)=active_widget$(size,2) goto filepanel_test

window open -300 ,-300 to -100, -100, "bmp", ""
labelength=draw get "Text-Width", default$, "bmp"
labelheight=draw get "Max-Text-Height", "bmp"
Window close "bmp"

if label$="" then
	curentheight=curentheight+labelheight+5
else 
	curentheight=curentheight+ 2*(labelheight+5)
endif

if val(width$) < 300 width$="300"
if (labelength > curentwidth-20) curentwidth=labelength+20
if (val(width$) > curentwidth-20) curentwidth=val(width$)+20

active_widget$(size,3)=label$
active_widget$(size,7)=mode$
active_widget$(size,4)=default$
active_widget$(size,8)=width$

end sub
////////////////////////////////////////////////////////
sub setup_popup(v)


local x,label$,default$,tooltip$,option1$,option2$,option3$,option4$,option5$
local option6$,option7$,option8$,option9$,option10$
x=v
size=arraysize( active_widget$(),1)
size=size+1
dim active_widget$(size,30)
active_widget$(size,1)="popup"
active_widget$(size,2)=widget$(x,1) // name of popup


label popup_test

if widget$(x,1)=active_widget$(size,2) then
//print "lower$(widget$(x,2)) ",lower$(widget$(x,2))
	switch lower$(widget$(x,2))
		
			
			
		case "default"
			default$ = widget$(x,3)
			break
		case "tooltip"	
			tooltip$=widget$(x,3)
			break
		case "label"
			label$=widget$(x,3)
			break
		case "option1"
			option1$=widget$(x,3)
			break
		case "option2"
			option2$=widget$(x,3)
			break
		case "option3"
			option3$=widget$(x,3)
			break
		case "option4"
			option4$=widget$(x,3)
			break
		case "option5"
			option5$=widget$(x,3)
			break
		case "option6"
			option6$=widget$(x,3)
			break
		case "option7"
			option7$=widget$(x,3)
			break
		case "option8"
			option8$=widget$(x,3)
			break
		case "option9"
			option9$=widget$(x,3)
			break
		case "option10"
			option10$=widget$(x,3)
			break
		case "width"
			width$=widget$(x,3)
			break	
				
		default
	end switch
end if
x=x+1
if widget$(x,1)=active_widget$(size,2) goto popup_test

window open -300 ,-300 to -100, -100, "bmp", ""
labelength=draw get "Text-Width", default$, "bmp"
labelheight=draw get "Max-Text-Height", "bmp"

if label$="" then
	curentheight=curentheight+labelheight+5
else 
	curentheight=curentheight+ 2*(labelheight+5)
endif



active_widget$(size,3)=label$
active_widget$(size,4)=default$
active_widget$(size,6)=tooltip$
active_widget$(size,21)=option1$
active_widget$(size,22)=option2$
active_widget$(size,23)=option3$
active_widget$(size,24)=option4$
active_widget$(size,25)=option5$
active_widget$(size,26)=option6$
active_widget$(size,27)=option7$
active_widget$(size,28)=option8$
active_widget$(size,29)=option9$
active_widget$(size,30)=option10$

if val(width$) < 20 width$="20"
if (labelength > curentwidth-20) curentwidth=labelength+20

w=val(width$)
for i=21 to 30
ww=draw get "Text-Width", active_widget$(size,i)+"   ", "bmp"
ww=ww+20
if ww>w w=ww
next
Window close "bmp"
active_widget$(size,8)=str$(w)
if w > curentwidth-20 curentwidth= w+20

label$ =""
default$ =""
tooltip$ =""
option1$ =""
option2$ =""
option3$ =""
option4$ =""
option5$ =""
option6$ =""
option7$ =""
option8$ =""
option9$ =""
option10$ =""

static pp
pp=new_popup(active_widget$(size,2), ID$, 1)//radio selection
for i=1 to 10
if active_widget$(size,i+20)<>"" then
//print  active_widget$(size,i+20)+" ",i
add_popup_selection$(pp,i,active_widget$(size,i+20))
endif
next
if active_widget$(size,4)<>"" then
a$=right$(active_widget$(size,4),len(active_widget$(size,4))-6)
a$=popup_select$(pp,active_widget$(size,val(a$)+20))
endif
active_widget$(size,5)=str$(pp)
end sub
////////////////////////////////////////////////////////

sub setup_multi(v)
local x,label$,default$,tooltip$,option1$,option2$,option3$,option4$,option5$
local option6$,option7$,option8$,option9$,option10$,title$
x=v
size=arraysize( active_widget$(),1)
size=size+1
dim active_widget$(size,30)
active_widget$(size,1)="multi"
active_widget$(size,2)=widget$(x,1) // name of multi

title$="Select"//default title
label multi_test

if widget$(x,1)=active_widget$(size,2) then
//print "lower$(widget$(x,2)) ",lower$(widget$(x,2))
	switch lower$(widget$(x,2))
		
			
			
		case "default"
			if default$=""then
				default$ = widget$(x,3)
			else
			default$=default$+"|"+widget$(x,3)
			endif
			break
		case "tooltip"	
			tooltip$=widget$(x,3)
			break
		case "label"
			label$=widget$(x,3)
			break
		case "title"
			title$=widget$(x,3)
			break
		case "option1"
			option1$=widget$(x,3)
			break
		case "option2"
			option2$=widget$(x,3)
			break
		case "option3"
			option3$=widget$(x,3)
			break
		case "option4"
			option4$=widget$(x,3)
			break
		case "option5"
			option5$=widget$(x,3)
			break
		case "option6"
			option6$=widget$(x,3)
			break
		case "option7"
			option7$=widget$(x,3)
			break
		case "option8"
			option8$=widget$(x,3)
			break
		case "option9"
			option9$=widget$(x,3)
			break
		case "option10"
			option10$=widget$(x,3)
			break
		case "width"
			width$=widget$(x,3)
			break	
				
		default
	end switch
end if
x=x+1
if widget$(x,1)=active_widget$(size,2) goto multi_test

window open -300 ,-300 to -100, -100, "bmp", ""
labelength=draw get "Text-Width", default$, "bmp"
labelheight=draw get "Max-Text-Height", "bmp"

if label$="" then
	curentheight=curentheight+labelheight+5
else 
	curentheight=curentheight+ 2*(labelheight+5)
endif



active_widget$(size,3)=label$
active_widget$(size,4)=default$
active_widget$(size,6)=tooltip$
active_widget$(size,7)=title$
active_widget$(size,21)=option1$
active_widget$(size,22)=option2$
active_widget$(size,23)=option3$
active_widget$(size,24)=option4$
active_widget$(size,25)=option5$
active_widget$(size,26)=option6$
active_widget$(size,27)=option7$
active_widget$(size,28)=option8$
active_widget$(size,29)=option9$
active_widget$(size,30)=option10$

if val(width$) < 20 width$="20"
if (labelength > curentwidth-20) curentwidth=labelength+20

w=val(width$)

ww=draw get "Text-Width", active_widget$(size,7)+"   ", "bmp"
ww=ww+20
if ww>w w=ww

Window close "bmp"
active_widget$(size,8)=str$(w)
if w > curentwidth-20 curentwidth= w+20

label$ =""
default$ =""
tooltip$ =""
title$ = ""
option1$ =""
option2$ =""
option3$ =""
option4$ =""
option5$ =""
option6$ =""
option7$ =""
option8$ =""
option9$ =""
option10$ =""

static pp
pp=new_popup(active_widget$(size,2), ID$, 3)//multi selection
for i=1 to 10
if active_widget$(size,i+20)<>"" then
//print  active_widget$(size,i+20)+" ",i
add_popup_selection$(pp,i,active_widget$(size,i+20))
endif
next
//if active_widget$(size,4)<>"" then
//a$=right$(active_widget$(size,4),len(active_widget$(size,4))-6)
//a$=popup_select$(pp,active_widget$(size,val(a$)+20))
//endif
active_widget$(size,5)=str$(pp)



end sub
////////////////////////////////////////////////////////
sub setup_multiview(v)

size=arraysize( active_widget$(),1)
size=size+1
dim active_widget$(size,30)
active_widget$(size,1)="multiview"
active_widget$(size,2)=widget$(x,1) // name of multi
panel1$=widget$(v,3)
curentwidth1=curentwidth
curentheight1 = curentheight
curentwidth = 280
curentheight = 10
panel=2

end sub
////////////////////////////////////////////////////////

sub setup_texturl(v)


label$=""

local x
x=v
size=arraysize( active_widget$(),1)
size=size+1
dim active_widget$(size,20)
active_widget$(size,1)="texturl"
active_widget$(size,2)=widget$(x,1) // name of texturl


label texturl_test

if widget$(x,1)=active_widget$(size,2) then
//print "lower$(widget$(x,2)) ",lower$(widget$(x,2))
	switch lower$(widget$(x,2))
		case "align"	
			align$=widget$(x,3)
			break
		case "url"
			url$=widget$(x,3)
			break
		case "default"
			default$=widget$(x,3)
			BREAK
		case "tooltip"	
			tooltip$=widget$(x,3)
			break
		end switch	
end if
x=x+1
if widget$(x,1)=active_widget$(size,2) goto texturl_test

window open -300 ,-300 to -100, -100, "bmp", ""
labelength=draw get "Text-Width", default$, "bmp"
labelheight=draw get "Max-Text-Height", "bmp"
Window close "bmp"


	curentheight=curentheight+labelheight+5



if (labelength > curentwidth-20) curentwidth=labelength+20


active_widget$(size,3)=url$
active_widget$(size,4)=default$
active_widget$(size,8)=align$

url$=""
default$=""
align$=""

end sub
////////////////////////////////////////////////////////
sub setup_spincontrol(v)


local x

min$ ="0"
max$ ="999"
step$ ="1"

x=v
size=arraysize( active_widget$(),1)
size=size+1
dim active_widget$(size,30)
active_widget$(size,1)="spincontrol"
active_widget$(size,2)=widget$(x,1) // name of spincontrol

title$="Select"//default title
label spincontrol_test

if widget$(x,1)=active_widget$(size,2) then
//print "lower$(widget$(x,2)) ",lower$(widget$(x,2))
	switch lower$(widget$(x,2))
		
			
			
		case "default"
			default$ = widget$(x,3)
			break
		case "tooltip"	
			tooltip$=widget$(x,3)
			break
		case "label"
			label$=widget$(x,3)
			break
		case "min"
			min$=widget$(x,3)
			break
		case "max"
			max$=widget$(x,3)
			break
		case "step"
			step$=widget$(x,3)
			break
		case "align"
			align$=widget$(x,3)
			break
		default
	end switch
end if
x=x+1
if widget$(x,1)=active_widget$(size,2) goto spincontrol_test

window open -300 ,-300 to -100, -100, "bmp", ""
labelength=draw get "Text-Width", default$, "bmp"
labelheight=draw get "Max-Text-Height", "bmp"
curentheight=curentheight+labelheight+5
Window close "bmp"



active_widget$(size,3)=label$
active_widget$(size,4)=default$
active_widget$(size,6)=tooltip$
active_widget$(size,7)=align$
if val(max$)>999 max$="999"
if val(min$)<0 min$="0" 
active_widget$(size,21)=min$
active_widget$(size,22)=max$
active_widget$(size,23)=step$

if (labelength+55 > curentwidth-20) curentwidth=labelength+75

label$ =""
default$ =""
tooltip$ =""
align$ = ""
min$ ="0"
max$ ="999"
step$ ="1"

end sub

////////////////////////////////////////////////////////
sub addwidget(n)
c=n
switch active_widget$(c,1)
	case "TEXTCONTROL"
		buildtextcontrol(c)
		break
	case "image"
		addimage(c)
		break
	case "checkbox"
		addcheckbox(c)
		break
	case "text"
		addtext(c)
		break
	case "radiobutton"
		add_radiobutton(c)
		break
	case "date"
		add_date(c)
		break
	case "filepanel"
		add_filepanel(c)
		break
	case "popup"
		add_popup(c)
		break
	case "texturl"
		add_texturl(c)
		break	
	case "multi"
		add_multi(c)
		break
	case "multiview"
		add_multiview(c)
		break
	case "spincontrol"
		add_spincontrol(c)
		break							
				
	default
end switch	
end sub	

////////////////////////////////////////////////////////
sub buildtextcontrol(ze)

local x,cw
cw = curentwidth
if panel=2 and ID$="MainView" cw=curentwidth1


x=ze
//print active_widget$(x,5)
if active_widget$(x,5)="" active_widget$(x,5)="35"
if active_widget$(x,3)<>"" then
if active_widget$(x,7) <> "true" then
//print "active_widget$(x,3) "+active_widget$(x,3)+" ", x
	text origx+5,origy+5 to cw-5, origy+25, str$(x), active_widget$(x,3),ID$
	TEXT SET str$(x), "Align-Center"
	origy= origy+25
endif	
endif	
	
	space$=Blank$(val(active_widget$(x,5))+3)
	draw set "system-fixed",ID$
	TC_Width=draw get "Text-Width", space$,ID$
	draw set "system-plain", ID$
	if active_widget$(x,7)="true"then
	label$=active_widget$(x,3)
	TC_Width=TC_Width+draw get "Text-Width", label$,ID$
	endif
	
	if TC_Width < cw then
		TC_Width=TC_Width/2
		st=(cw/2)-TC_Width
		en=(cw/2)+TC_Width
		if (active_widget$(x,19)="left") and (active_widget$(x,7)="true") then
			st=origx+5
			en=st+(TC_Width*2)
		endif
		if (active_widget$(x,19)="right") and (active_widget$(x,7)="true") then
			en=cw-5
			st=en-(TC_Width*2)
		endif
		else
		st=origx+5
		en=origx+(cw-10)
	endif
	
	
	

if active_widget$(x,7)="true"then
label$=active_widget$(x,3)
curentheight = curentheight-fontheight
//en=en+draw get "Text-Width", label$,ID$
//if (en > curentwidth-10) en=curentwidth-10
//st=origx+8
endif



 
TEXTCONTROL st,origy+5 to en, origy+25, active_widget$(x,2), label$,active_widget$(x,4),ID$
ispassword=false
if active_widget$(x,18)= "true" ispassword=true: TEXTCONTROL set active_widget$(x,2), ispassword


// for nmanditory fields
if active_widget$(x,20) = "true" then
DRAW SET "HighColor", 255,0,0, ID$
if active_widget$(x,7)="true"then
DRAW CIRCLE st-4,origy+15, 2, ID$
else
DRAW CIRCLE origx+3,origy+15, 2, ID$
endif
DRAW SET "HighColor", 0,0,0, ID$
endif

 
//print st, en , origy+30, origy+50
label$=""
TEXTCONTROL set active_widget$(x,2), "length",active_widget$(x,5)
if (active_widget$(x,6) <>"" ) tooltip active_widget$(x,2), active_widget$(x,6) 



 

//print "building"
origy=origy+30
x=0
end sub


////////////////////////////////////////////////////////
sub addimage(n)
local x, www,width,cw
cw = curentwidth
if panel=2 and ID$="MainView" cw=curentwidth1
x=n

if active_widget$(x,3)<>"" then
//print "active_widget$(x,3) "+active_widget$(x,3)+" ", x
	text origx+5,origy+5 to cw-5, origy+25, str$(x), active_widget$(x,3),ID$
	TEXT SET str$(x), "Align-Center"
	origy= origy+25
endif
width=0
if val(active_widget$(x,5))=0 then
xw = -1
//print wx
else 
width=val(active_widget$(x,5))
xw=origx+5+width
endif
//print width
www=cw
www=www/2
if (width > 0) then
www = www-(width/2)
xw=www+width
else 
www = origx+5
endif
//print www,xw, width, active_widget$(x,5)
border=0
if (active_widget$(x,7)<>"") then
border=val(active_widget$(x,7))
draw set "highcolor", 150,150,150 , ID$
draw set true, "HighSolidFill"
DRAW RECT www-border,(origy+5)-border TO xw+border,origy+5+val(active_widget$(x,6))+border, ID$
draw set false, "HighSolidFill"
draw set "highcolor", 0,0,0 , ID$
end if


LoadError = DRAW IMAGE www,origy+5 TO xw,origy+5+val(active_widget$(x,6)), active_widget$(x,4), ID$
//print LoadError


origy=origy+val(active_widget$(x,6))+5+border

end sub	

////////////////////////////////////////////////////////'

sub addcheckbox(b)


 if (val(active_widget$(b,4))=1) then
 active_widget$(b,5)="ON"
 else
 active_widget$(b,5)="OFF"
 endif
CHECKBOX 10,origy+5, active_widget$(b,2), active_widget$(b,3), val(active_widget$(b,4)), ID$
if active_widget$(b,6)<>"" then
tooltip active_widget$(b,2), active_widget$(b,6)
endif

origy=origy+25

end sub
////////////////////////////////////////////////////////

sub addtext(bb)
local cw
cw = curentwidth
if panel=2 and ID$="MainView" cw=curentwidth1

sbar = val(active_widget$(bb,18))

if sbar > 3 sbar=0
if sbar < 0 sbar=0
if sbar > 0 sbar=1
txtheight= DRAW GET "Max-Text-Height", ID$
ht=(val(active_widget$(bb,3))*(txtheight+2))
textedit origx+5, origy to cw-5, origy+ht, active_widget$(bb,2), sbar, ID$
textedit add active_widget$(bb,2), active_widget$(bb,4)
if active_widget$(bb,17) <> "white" TEXTEDIT COLOR active_widget$(bb,2), "bgcolor",red,green,blue
TEXTEDIT SET active_widget$(bb,2), "editable", false
//textedit add active_widget$(bb,2), active_widget$(bb,4)
if (active_widget$(bb,6)<>"") tooltip active_widget$(bb,2), active_widget$(bb,6)
if (active_widget$(bb,19)<>"") TEXTEDIT SET active_widget$(bb,2),"align", active_widget$(bb,19)

origy=origy+ht
end sub
////////////////////////////////////////////////////////

sub ceckboxonoff(statu$)
if right$(statu$,5)=":OFF|" on$ = "OFF":widget$=left$(statu$, len(statu$)-5)
if right$(statu$,4)=":ON|"  on$ = "ON":widget$=left$(statu$, len(statu$)-4)

size=arraysize( active_widget$(),1)
for x=1 to size
if (active_widget$(x,2) = widget$) active_widget$(x,5)=on$
next

end sub
////////////////////////////////////////////////////////


sub add_radiobutton(n)

// need to find the height needed for the radioview


local x
x=n
viewheight=0
if active_widget$(x,3)<>"" viewheight= 20

for i = 1 to 6
if active_widget$(x,i+10)<>"" viewheight = viewheight + 25
next


radioview$ = active_widget$(x,2)
//print radioview$
view origx,origy+2 to curentwidth, origy + viewheight, radioview$, ID$

draw set "BGColor", red,green,blue, radioview$
//draw set "BGColor", 255,255,255, radioview$


//print origx,origy, curentwidth,curentheight 


if active_widget$(x,3)<>"" then
//print "active_widget$(x,3) "+active_widget$(x,3)+" ", x
	text origx+5,5 to curentwidth-5, 25,radioview$+str$(x), active_widget$(x,3),radioview$
	TEXT SET radioview$+str$(x), "Align-Center"
	
endif

if active_widget$(x,6) <> "" TOOLTIP radioview$,  active_widget$(x,6)
for i=11 to 16 

	if (active_widget$(x,i) <> "") then
	 	if active_widget$(x,3)<>"" then
			radiobutton 10,((i-10)*20)+5, radioview$+".option"+str$(i-10), active_widget$(x,i), false, radioview$
		else
			radiobutton 10,((i-10)*20)-10, radioview$+".option"+str$(i-10), active_widget$(x,i), false, radioview$
		endif	
	endif
next

if active_widget$(x,4) <>"" RADIOBUTTON SET radioview$+"."+active_widget$(x,4), true: active_widget$(x,5)=active_widget$(x,4)





//print active_widget$(x,3)+" "+active_widget$(x,4)+" "+active_widget$(x,6)+" "+active_widget$(x,11)+" "+active_widget$(x,12)+" "+active_widget$(x,13)+" "+active_widget$(x,14)+" "+active_widget$(x,15)+" "+active_widget$(x,16) 

origy = origy + viewheight
end sub
////////////////////////////////////////////////////////
sub radio_button(statu$)
local i
i=instr(statu$,".")
widget$=left$(statu$,i-1)
return$=right$(statu$, len(statu$)-i)
return$=left$(return$, len(return$)-1)

size=arraysize( active_widget$(),1)
for x=1 to size
if (active_widget$(x,2) = widget$) active_widget$(x,5)= return$
next

end sub
////////////////////////////////////////////////////////
sub add_date(v)
local x
x=v
b=(curentwidth/2)
if active_widget$(x,3) <>"" then

b1= draw get "Text-Width", active_widget$(x,3), ID$
b1=b1/2
draw text b-b1,origy+15, active_widget$(x,3), ID$
origy=origy+20
endif


b=b-45

CALENDAR b,origy+5, active_widget$(x,2), active_widget$(x,7), active_widget$(x,4), ID$





if active_widget$(x,6)<>"" then
tooltip active_widget$(x,2), active_widget$(x,6)
endif

origy=origy+25







end sub

////////////////////////////////////////////////////////
sub add_filepanel(v)

local x,bb.b1,b2
x=v
bb=(curentwidth/2)
if active_widget$(x,3) <>"" then

b1= draw get "Text-Width", active_widget$(x,3), ID$
b1=b1/2
draw text bb-b1,origy+15, active_widget$(x,3), ID$
origy=origy+20
endif

b2=val(active_widget$(x,8))/2

view bb-(b2+5),origy to bb+b2,origy+20,active_widget$(x,2) , ID$
VIEW DROPZONE active_widget$(x,2)
draw set "bgcolor", red,green,blue, active_widget$(x,2)
xx=draw get "Text-Width", "Select", active_widget$(x,2)
BUTTON val(active_widget$(x,8))-(xx+15),0 TO val(active_widget$(x,8)),20, active_widget$(x,2)+":_Select", "Select", active_widget$(x,2)
TEXTCONTROL 0,0 TO val(active_widget$(x,8))-(xx+20),20, active_widget$(x,2)+":_Envoked", "", active_widget$(x,4), active_widget$(x,2)
TOOLTIP active_widget$(x,2), active_widget$(x,4)
origy=origy+20






end sub

////////////////////////////////////////////////////////
sub filepanel_handle(mm$)
local x,a$,y
a$=mm$

x=instr(a$,":_")
objectname$=left$(a$,x-1)



size=arraysize( active_widget$(),1)
for y=1 to size
if active_widget$(y,2) = objectname$ then
index=y
if instr(a$,"Envoked:") then
x = instr(a$,"Envoked:")
a$=right$(a$,len(a$)-(x+7))
a$=left$(a$,len(a$)-1)
active_widget$(y,4)=a$

endif

if instr(a$,"Dropped:") then
x = instr(a$,"Dropped:")
a$=right$(a$,len(a$)-(x+7))
a$=left$(a$,len(a$)-1)
if a$<>"" textcontrol set active_widget$(y,2)+":_Envoked", a$: active_widget$(y,4)=a$


endif

if instr(a$,"Select") then
for i=1 to len(active_widget$(y,4))
if mid$(active_widget$(y,4),i,1)="/" lastslash=i
next
if active_widget$(y,3) <>"" then
a$=  FILEPANEL active_widget$(y,7), active_widget$(y,3),  left$(active_widget$(y,4),lastslash), active_widget$(y,4)
else 
a$=  FILEPANEL active_widget$(y,7), active_widget$(y,7),  left$(active_widget$(y,4),lastslash), active_widget$(y,4)
endif
if a$<>"" textcontrol set active_widget$(y,2)+":_Envoked", a$: active_widget$(y,4)=a$


endif
endif

next

if instr(a$,"Envoked:") then
x = instr(a$,"Envoked:")
name$=left$(a$,x-3)



endif

tooltip objectname$,""
tooltip objectname$,active_widget$(index,4)

end sub
////////////////////////////////////////////////////////

sub add_popup(v)

local x,bb.b1,b2
x=v
bb=(curentwidth/2)
if active_widget$(x,3) <>"" then

b1= draw get "Text-Width", active_widget$(x,3), ID$
b1=b1/2
//draw text bb-b1,origy+15, active_widget$(x,3), ID$
TEXT origx,origy+2 TO curentwidth,origy+15, active_widget$(x,2), active_widget$(x,3), ID$
TEXT SET active_widget$(x,2), "Align-Center"
origy=origy+20
endif

label$="Select"
if active_widget$(x,4)<>"" then
a$=right$(active_widget$(x,4),len(active_widget$(x,4))-6)
label$=active_widget$(x, val(a$)+20)
endif

button bb-(val(active_widget$(x,8))/2),origy to bb+(val(active_widget$(x,8))/2),origy+20,active_widget$(x,1)+"_"+active_widget$(x,2)+"_"+str$(x)+"_"+active_widget$(x,5),label$+"  â–¾", ID$
active_widget$(x,11)=str$( bb-(val(active_widget$(x,8))/2))
active_widget$(x,12)=str$(origy)
if active_widget$(x,6) <>"" tooltip active_widget$(x,1)+"_"+active_widget$(x,2)+"_"+str$(x)+"_"+active_widget$(x,5),active_widget$(x,6) 

origy=origy+20




end sub
////////////////////////////////////////////////////////
sub add_multi(v)

local x,bb.b1,b2
x=v
bb=(curentwidth/2)
if active_widget$(x,3) <>"" then

b1= draw get "Text-Width", active_widget$(x,3), ID$
b1=b1/2
//draw text bb-b1,origy+15, active_widget$(x,3), ID$
TEXT origx,origy+2 TO curentwidth,origy+15, active_widget$(x,2), active_widget$(x,3), ID$
TEXT SET active_widget$(x,2), "Align-Center"
origy=origy+20
endif

label$="Select"
if active_widget$(x,7)<>"" label$=active_widget$(x,7)


button bb-(val(active_widget$(x,8))/2),origy to bb+(val(active_widget$(x,8))/2),origy+20,active_widget$(x,1)+"_"+active_widget$(x,2)+"_"+str$(x)+"_"+active_widget$(x,5),label$+"  â–¾", ID$
active_widget$(x,11)=str$( bb-(val(active_widget$(x,8))/2))
active_widget$(x,12)=str$(origy)
if active_widget$(x,6) <>"" tooltip active_widget$(x,1)+"_"+active_widget$(x,2)+"_"+str$(x)+"_"+active_widget$(x,5),active_widget$(x,6) 

origy=origy+20

end sub

////////////////////////////////////////////////////////
sub popup_handle(pu$)

pu$=left$(pu$,len(pu$)-1)
dim param$(5)
num=split(pu$,param$(),"_")
pu=val(param$(4))


xx=val(active_widget$(val(param$(3)),11))
yy=val(active_widget$(val(param$(3)),12))

selection$=popupdisplay$(xx,yy,pu)
if selection$<>"" then
	selection$=trim$(selection$)
	a$=popup_select$(pu,selection$)
	if a$="ok" OPTION SET pu$, "Label", selection$+" â–¾"
endif

end sub
////////////////////////////////////////////////////////
sub multi_handle(pu$)
local wid, ii$, set$, num, pu
pu$=left$(pu$,len(pu$)-1)
dim param$(5)
num=split(pu$,param$(),"_")
pu=val(param$(4))

wid=val(param$(3))

if active_widget$(wid,4)<>"" then// default$
dim def$(5)
def=split(active_widget$(wid,4),def$(),"|")
for i=1 to def
ii$=right$(def$(i),len(def$(i))-6)
set$=active_widget$(wid,val(ii$)+20)
a$=popup_select$(pu,set$)
next
active_widget$(wid,4)=""
endif


xx=val(active_widget$(wid,11))
yy=val(active_widget$(wid,12))

selection$=popupdisplay$(xx,yy,pu)

if selection$<>"" then
	selection$=trim$(selection$)
	if left$(selection$,3)="âˆš" then // remove the mark to see the real selection
	selection$ = right$(selection$,len(selection$)-4)
	endif
	a$=popup_select$(pu,selection$)
	//if a$="ok" OPTION SET pu$, "Label", selection$+" â–¾"
endif

end sub
////////////////////////////////////////////////////////
sub add_multiview(c)

ID$=ID1$
origy=0



end sub
////////////////////////////////////////////////////////
sub add_texturl(v)
local x, y

if lower$(active_widget$(v,8)) = "center" or lower$(active_widget$(v,8)) ="" then
	x=draw get "Text-Width", active_widget$(v,4), ID$
	y=curentwidth/2
	x=x/2
	x=y-x
endif
if lower$(active_widget$(v,8)) = "left" then
	x=10
endif
if lower$(active_widget$(v,8)) = "right" then
	x=draw get "Text-Width", active_widget$(v,4), ID$
	x=curentwidth-(x+10)
endif
TEXTURL x,origy+5, active_widget$(v,2), active_widget$(v,4), active_widget$(v,3), ID$
origy=origy+text20

end sub
////////////////////////////////////////////////////////
sub add_spincontrol(v)

local ofset 

if val(active_widget$(size,22)) >= 100 ofset = 72
if val(active_widget$(size,22)) >= 10 and val(active_widget$(size,22)) <100 ofset = 65
if val(active_widget$(size,22)) < 10 ofset = 58

if lower$(active_widget$(v,7)) = "center" or lower$(active_widget$(v,7)) ="" then
	x=draw get "Text-Width", active_widget$(v,3), ID$
	x=x+ofset
	y=curentwidth/2
	x=x/2
	x=y-x
endif
if lower$(active_widget$(v,7)) = "left" then
	x=10
endif
if lower$(active_widget$(v,7)) = "right" then
	x=draw get "Text-Width", active_widget$(v,2), ID$
	
	x=curentwidth-(x+5+ofset)
endif
stp = val(active_widget$(v,23))
if stp = 0 stp = 1
SPINCONTROL x,origy+5, active_widget$(v,2), active_widget$(v,3), val(active_widget$(v,21)), val(active_widget$(v,22)), stp, ID$
if active_widget$(size,4) <>"" SPINCONTROL SET active_widget$(v,2), val(active_widget$(size,4))
if active_widget$(size,6)<>"" tooltip active_widget$(v,2),active_widget$(size,6) 

end sub
////////////////////////////////////////////////////////
sub command_line_args()
local x,y,i,size1 
size=arraysize( active_widget$(),1)
for x=1 to args
	a$=peek$("argument")
	if parseline$(a$)="ok" then
		for y=1 to size
			if command$="mandatory" and label$ = active_widget$(y,2)then
				if active_widget$(y,1) = "TEXTCONTROL" active_widget$(y,20)=parameter$
			endif
			if command$="ispassword" and label$ = active_widget$(y,2)then
				if active_widget$(y,1) = "TEXTCONTROL" active_widget$(y,18)=parameter$
			endif
			if label$="*" and upper$(command$)="TITLE" then
				size1=arraysize(widget$(),1)
					for i=0 to size1
						if upper$(widget$(i,2)) = "TITLE" widget$(i,3) = parameter$
					next	 
			endif
			if command$="default" and label$ = active_widget$(y,2)then	
				switch active_widget$(y,1)
					case "filepanel"
						active_widget$(y,4)=parameter$
						break
					case "checkbox"
						active_widget$(y,4)=parameter$
						break
					case "TEXTCONTROL"
						active_widget$(y,4)=parameter$
						break
					case "radiobutton"
						active_widget$(y,4)=parameter$
						break
					case "text"
						active_widget$(y,4)=parameter$
						break
					case "date"
						active_widget$(y,4)=parameter$
						break
					case "spincontrol"
						active_widget$(y,4)=parameter$
						break
					
					
					case "popup"
						active_widget$(y,4)=parameter$
						pp=val(active_widget$(y,5))
						a$=right$(active_widget$(y,4),len(active_widget$(y,4))-6)
						a$=popup_select$(pp,active_widget$(y,val(a$)+20))
							
						break
					default
				end switch
					
			endif
			if command$="label" and label$ = active_widget$(y,2)then
				if active_widget$(y,1)="date" active_widget$(y,3) = parameter$
				if active_widget$(y,1)="filepanel" active_widget$(y,3) = parameter$
				if active_widget$(y,1)="popup" 	active_widget$(y,3) = parameter$
				if active_widget$(y,1)="TEXTCONTROL" 	active_widget$(y,3) = parameter$
				if active_widget$(y,1)="spincontrol" 	active_widget$(y,3) = parameter$	
					
			endif
			if command$="mode" and label$ = active_widget$(y,2)then
			if active_widget$(y,1)="filepanel" active_widget$(y,7) = parameter$
			endif
			
		next
	endif
next

end sub

////////////////////////////////////////////////////////
